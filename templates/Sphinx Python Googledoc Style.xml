<templateSet group="Sphinx Python Googledoc Style">
  <template name="doc_mod" value="# -*- coding: utf-8 -*-&#10;&quot;&quot;&quot;&#10;.. module:: $module_path$&#10;   :platform: $platform$&#10;   :synopsis: $synopsis$&#10;&#10;.. moduleauthor:: $author$&#10;&#10;This is your summary line.&#10;This module demonstrates documentation as specified by the `Google Python&#10;Style Guide`_. Docstrings may extend over multiple lines. Sections are created&#10;with a section header and a colon followed by a block of indented text.&#10;&#10;Example:&#10;    Examples can be given using either the ``Example`` or ``Examples``&#10;    sections. Sections support any reStructuredText formatting, including&#10;    literal blocks::&#10;&#10;        $ python example_google.py&#10;&#10;Section breaks are created by resuming unindented text. Section breaks&#10;are also implicitly created anytime a new section starts.&#10;&#10;Attributes:&#10;    module_level_variable1 (int): Module level variables may be documented in&#10;        either the ``Attributes`` section of the module docstring, or in an&#10;        inline docstring immediately following the variable.&#10;&#10;        Either form is acceptable, but the two should not be mixed. Choose&#10;        one convention to document module level variables and be consistent&#10;        with it.&#10;&#10;Todo:&#10;    * For module TODOs&#10;    * You have to also use ``sphinx.ext.todo`` extension&#10;&#10;.. _Resources below will not show in guide, but are for documentation only:&#10;   https://google.github.io/styleguide/pyguide.html&#10;   https://www.sphinx-doc.org/en/master/usage/extensions/napoleon.html#module-sphinx-ext-napoleon&#10;&quot;&quot;&quot;" description="Python Module Documentation" toReformat="false" toShortenFQNames="true">
    <variable name="module_path" expression="fileNameWithoutExtension()" defaultValue="root.path.module" alwaysStopAt="true" />
    <variable name="platform" expression="" defaultValue="Unix" alwaysStopAt="true" />
    <variable name="synopsis" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="author" expression="" defaultValue="Ryan Long &lt;rlong@noaa.gov&gt;" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
      <option name="Python_Class" value="false" />
    </context>
  </template>
  <template name="doc_class" value="&quot;&quot;&quot;$summary$&#10;&#10;    If the class has public attributes, they may be documented here&#10;    in an ``Attributes`` section and follow the same formatting as a&#10;    function's ``Args`` section. Alternatively, attributes may be documented&#10;    inline with the attribute's declaration (see __init__ method below).&#10;&#10;    Properties created with the ``@property`` decorator should be documented&#10;    in the property's getter method.&#10;&#10;    Attributes:&#10;        attr1 (str): Description of `attr1`.&#10;        attr2 (:obj:`int`, optional): Description of `attr2`.&#10;&#10;    &quot;&quot;&quot;" description="Python Class Documentation" toReformat="false" toShortenFQNames="true">
    <variable name="summary" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
</templateSet>